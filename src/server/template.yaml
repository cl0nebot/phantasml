AWSTemplateFormatVersion : '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Phantasml API.

Parameters:
  
  Role:
    Type: String
    
  FromEmail:
    Type: String
  
  SiteUrl:
    Type: String
  
  GoogleClientId:
    Type: String
  
Resources:

  UserGetStatus:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.getStatus
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Environment:
        Variables:
          SITE_URL: !Ref SiteUrl
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/user/status
            Method: get
   
  UserLogin:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.login
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Environment:
        Variables:
          SITE_URL: !Ref SiteUrl
          GOOGLE_CLIENT_ID: !Ref GoogleClientId
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/user/login
            Method: post

  UserLogout:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.logout
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Environment:
        Variables:
          SITE_URL: !Ref SiteUrl
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/user/logout
            Method: post

  UserCreate:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.create
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Environment:
        Variables:
          FROM_EMAIL: !Ref FromEmail
          SITE_URL: !Ref SiteUrl
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/user/create
            Method: post

  UserSetup:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.setup
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Environment:
        Variables:
          GOOGLE_CLIENT_ID: !Ref GoogleClientId
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/user/setup
            Method: post
            
  UserPasswordReset:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.passwordReset
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Environment:
        Variables:
          FROM_EMAIL: !Ref FromEmail
          SITE_URL: !Ref SiteUrl
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/user/password_reset
            Method: post

  UserPassword:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.password
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/user/password
            Method: post

  UserConfigure:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.configure
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/user/configure
            Method: post
            
  UserTransfer:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.transfer
      Role: !Ref Role
      Runtime: nodejs8.10
      Timeout: 5
      CodeUri: ../../build/server
      Environment:
        Variables:
          FROM_EMAIL: !Ref FromEmail
          SITE_URL: !Ref SiteUrl
          GOOGLE_CLIENT_ID: !Ref GoogleClientId
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/user/transfer
            Method: post
  
  UserCompleteTransfer:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.completeTransfer
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/user/complete_transfer
            Method: post
            
  UserDelete:
    Type: AWS::Serverless::Function
    Properties:
      Handler: user.deleteUser
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Environment:
        Variables:
          SITE_URL: !Ref SiteUrl
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/user/delete
            Method: post
            
  AdminGetSettings:
    Type: AWS::Serverless::Function
    Properties:
      Handler: admin.getSettings
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Environment:
        Variables:
          SITE_URL: !Ref SiteUrl
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/admin/settings
            Method: get

  AdminPutSettings:
    Type: AWS::Serverless::Function
    Properties:
      Handler: admin.putSettings
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Environment:
        Variables:
          SITE_URL: !Ref SiteUrl
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/admin/settings
            Method: put

  AdminInvite:
    Type: AWS::Serverless::Function
    Properties:
      Handler: admin.invite
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Environment:
        Variables:
          FROM_EMAIL: !Ref FromEmail
          SITE_URL: !Ref SiteUrl
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/admin/invite
            Method: post

  ResourceCreate:
    Type: AWS::Serverless::Function
    Properties:
      Handler: resource.create
      Role: !Ref Role
      Runtime: nodejs8.10
      CodeUri: ../../build/server
      Events:
        Request:
          Type: Api
          Properties:
            Path: /api/resource/create
            Method: post
